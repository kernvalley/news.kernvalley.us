{
  "name": "news-kernvalley-us",
  "version": "1.0.1",
  "private": true,
  "description": "News for the Kern River Valley",
  "config": {
<<<<<<< HEAD
    "serve": {
      "path": "./",
      "port": 8888
=======
    "icons": "./_data/icons.csv",
    "serve": {
      "domain": "localhost",
      "path": "./",
      "port": 8000
>>>>>>> patch/rebase
    },
    "dir": {
      "css": "css/",
      "js": "js/",
      "img": "img/",
      "html": "./"
    }
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/kernvalley/news.kernvalley.us.git"
  },
  "keywords": [
    "news",
    "Kern River Valley",
    "jekyll",
    "template",
    "ecmascript",
    "javascript",
    "css",
    "svg"
  ],
  "author": "Chris Zuber <shgysk8zer0@gmail.com>",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/kernvalley/news.kernvalley.us/issues"
  },
  "homepage": "https://github.com/kernvalley/news.kernvalley.us",
  "scripts": {
<<<<<<< HEAD
    "preinstall": "git submodule update --init --recursive",
    "postinstall": "npm run build",
    "start": "npm run netlify:live",
    "test": "npm run lint",
    "git:fetch": "git fetch --prune --tags",
    "git:submodules": "git submodule update --init --recursive",
    "lint": "npm run lint:all",
    "lint:all": "npm run lint:js && npm run lint:css",
    "lint:js": "eslint ${npm_package_config_dir_js}",
    "lint:css": "stylelint ${npm_package_config_dir_css}",
    "build": "npm run build:icons",
    "build:site": "JEKYLL_ENV=production bundle exec jekyll build",
    "build:site:dev": "bundle exec jekyll build --drafts --unpublished --future --profile --trace --strict_front_matter",
    "build:all": "npm run build:js && npm run build:css && npm run build:icons",
    "build:css": "postcss ${npm_package_config_dir_css}index.css -o ${npm_package_config_dir_css}index.min.css",
    "build:js": "rollup --config",
    "build:icons": "svg-sprite-generate -c icons.csv -o img/icons.svg",
    "fix:css": "stylelint ${npm_package_config_dir_css} --fix",
    "fix:js": "eslint ${npm_package_config_dir_js} --fix",
    "serve:production": "npm run build && JEKYLL_ENV=production bundle exec jekyll serve",
    "serve:dev": "bundle exec jekyll serve --port ${npm_package_config_serve_port} --drafts --unpublished --future --profile --trace --strict_front_matter",
    "netlify:deploy": "npm test && netlify deploy",
    "netlify:serve": "netlify dev -c 'npm run serve:dev'",
    "netlify:live": "netlify dev --live"
=======
    "test": "npm run lint",
    "start": "npm run netlify",
    "preinstall": "npm run git:submodules",
    "postinstall": "npm run build",
    "git:fetch": "git fetch --prune --tags",
    "git:submodules": "if [ -f '.gitmodules' ]; then git submodule update --init --recursive; fi",
    "lint": "npm run lint:js && npm run lint:css",
    "lint:js": "eslint ${npm_package_config_dir_js}",
    "lint:css": "stylelint ${npm_package_config_dir_css}",
    "fix:css": "stylelint ${npm_package_config_dir_css} --fix",
    "fix:js": "eslint ${npm_package_config_dir_js} --fix",
    "build": "npm run build:icons && npm run build:css && npm run build:js",
    "build:site": "JEKYLL_ENV=production bundle exec jekyll build",
    "build:site:dev": "bundle exec jekyll build --drafts --unpublished --future --profile --trace --strict_front_matter",
    "build:css": "if [ -f 'postcss.config.js' ]; then postcss ${npm_package_config_dir_css}index.css -o ${npm_package_config_dir_css}index.min.css; fi",
    "build:js": "if [ -f 'rollup.config.js' ]; then rollup --config; fi",
    "build:icons": "if [ -f ${npm_package_config_icons} ]; then $(svg-sprite-generate -c ${npm_package_config_icons} -o 'img/icons.svg'); fi",
    "serve:production": "npm run build && JEKYLL_ENV=production bundle exec jekyll serve",
    "serve:dev": "bundle exec jekyll serve --drafts --unpublished --future --profile --trace --strict_front_matter",
    "netlify": "if [ -f '.netlify/state.json' ]; then npm run netlify:live; else npm run netlify:serve; fi",
    "netlify:deploy": "netlify deploy",
    "netlify:serve": "netlify dev",
    "netlify:live": "netlify dev --live",
    "netlify:link": "netlify link"
>>>>>>> patch/rebase
  },
  "dependencies": {
    "svg-sprite-generator": "0.0.7"
  },
  "devDependencies": {
<<<<<<< HEAD
    "babel-eslint": "^10.0.1",
=======
    "babel-eslint": "^10.1.0",
>>>>>>> patch/rebase
    "cssnano": "^4.1.10",
    "cssnano-preset-default": "^4.0.7",
    "eslint": "^5.16.0",
    "eslint-plugin-async-await": "0.0.0",
    "eslint-plugin-babel": "^5.3.0",
<<<<<<< HEAD
    "netlify-cli": "^2.19.3",
    "postcss": "^7.0.20",
=======
    "netlify-cli": "^2.48.0",
    "postcss": "^7.0.27",
>>>>>>> patch/rebase
    "postcss-cli": "^6.1.3",
    "postcss-cssnext": "^3.1.0",
    "postcss-discard-comments": "^4.0.2",
    "postcss-import": "^12.0.1",
    "postcss-import-url": "^4.0.0",
    "postcss-url": "^8.0.0",
<<<<<<< HEAD
    "rollup": "^1.25.2",
    "rollup-plugin-terser": "^5.1.2",
=======
    "rollup": "^1.32.1",
    "rollup-plugin-terser": "^5.3.0",
>>>>>>> patch/rebase
    "rollup-plugin-url-resolve": "^0.1.1",
    "stylelint": "^10.0.1",
    "stylelint-config-recommended": "^2.2.0",
    "stylelint-config-standard": "^18.3.0",
<<<<<<< HEAD
    "svgo": "^1.2.2"
=======
    "svgo": "^1.3.2"
>>>>>>> patch/rebase
  }
}
